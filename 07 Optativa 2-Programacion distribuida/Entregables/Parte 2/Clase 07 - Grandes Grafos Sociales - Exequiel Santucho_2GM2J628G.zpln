{
  "paragraphs": [
    {
      "text": "print(s\"\"\"%html\n<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"$baseDir/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741474_1879689616",
      "id": "20171010-191319_1407757246",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:33301"
    },
    {
      "text": "%md\n## Alumno: Exequiel Santucho",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:06:14+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 14,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Alumno: Exequiel Santucho</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636045560380_1194101604",
      "id": "paragraph_1636045560380_1194101604",
      "dateCreated": "2021-11-04T17:06:00+0000",
      "dateStarted": "2021-11-04T17:06:14+0000",
      "dateFinished": "2021-11-04T17:06:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33302"
    },
    {
      "title": "Antes de comenzar",
      "text": "%md\n### Antes de comenzar\n1. Lanzar terminal\n1. Actualizar repo:\n```sh\ncd diplodatos_bigdata\ngit pull\n```\n1. Lanzar [Zeppelin](http://zeppelin.apache.org/) en docker:\n```sh\n./docker/zeppelin.sh\n```\n1. En navegador abrir [http://localhost:8080](http://localhost:8080)\n1. Seleccionar `Import note`\n1. Elegir json en `diplodatos_bigdata/clases/07_grafos/note.zpln`\n2. Seleccionar `Clase 07 - Grandes Grafos Sociales`\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": false,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Antes de comenzar</h3>\n<ol>\n<li>Lanzar terminal</li>\n<li>Actualizar repo:</li>\n</ol>\n<pre><code class=\"language-sh\">cd diplodatos_bigdata\ngit pull\n</code></pre>\n<ol>\n<li>Lanzar <a href=\"http://zeppelin.apache.org/\">Zeppelin</a> en docker:</li>\n</ol>\n<pre><code class=\"language-sh\">./docker/zeppelin.sh\n</code></pre>\n<ol>\n<li>En navegador abrir <a href=\"http://localhost:8080\">http://localhost:8080</a></li>\n<li>Seleccionar <code>Import note</code></li>\n<li>Elegir json en <code>diplodatos_bigdata/clases/07_grafos/note.zpln</code></li>\n<li>Seleccionar <code>Clase 07 - Grandes Grafos Sociales</code></li>\n</ol>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741475_398067356",
      "id": "20171026-104737_1316799732",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33303"
    },
    {
      "text": "%md\n# Grandes Grafos Sociales",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Grandes Grafos Sociales</h1>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741475_2038978923",
      "id": "20171101-121050_1177283744",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33304"
    },
    {
      "text": "%md\n## GraphFrames\n\n* Utiliza la interface Spark SQL (Dataframes).\n* Creada por [Databricks](https://databricks.com/).\n* Por ahora no viene en la distribución estandard de Spark (solo [GraphX](http://spark.apache.org/graphx/) sobre RDD's).\n* Algoritmos ya implementados como: \n    - Breadth-first search (BFS)\n    - Componentes (fuertemente) conexas\n    - Label Propagation Algorithm (para detectar comunidades)\n    - PageRank\n    - Shortest paths\n    - Triangle count.\n* **Agregación de mensajes** para hacer algoritmos.\n* **Motif finding** para queries. \n\n### Documentación:\n\n* [User Guide](https://graphframes.github.io/graphframes/docs/_site/user-guide.html).\n* [User Guide - Python](https://docs.databricks.com/spark/latest/graph-analysis/graphframes/user-guide-python.html).\n* [Documentación de la API](https://graphframes.github.io/graphframes/docs/_site/api/python/index.html).\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>GraphFrames</h2>\n<ul>\n  <li>Utiliza la interface Spark SQL (Dataframes).</li>\n  <li>Creada por <a href=\"https://databricks.com/\">Databricks</a>.</li>\n  <li>Por ahora no viene en la distribución estandard de Spark (solo <a href=\"http://spark.apache.org/graphx/\">GraphX</a> sobre RDD&rsquo;s).</li>\n  <li>Algoritmos ya implementados como:\n    <ul>\n      <li>Breadth-first search (BFS)</li>\n      <li>Componentes (fuertemente) conexas</li>\n      <li>Label Propagation Algorithm (para detectar comunidades)</li>\n      <li>PageRank</li>\n      <li>Shortest paths</li>\n      <li>Triangle count.</li>\n    </ul>\n  </li>\n  <li><strong>Agregación de mensajes</strong> para hacer algoritmos.</li>\n  <li><strong>Motif finding</strong> para queries.</li>\n</ul>\n<h3>Documentación:</h3>\n<ul>\n  <li><a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html\">User Guide</a>.</li>\n  <li><a href=\"https://docs.databricks.com/spark/latest/graph-analysis/graphframes/user-guide-python.html\">User Guide - Python</a>.</li>\n  <li><a href=\"https://graphframes.github.io/graphframes/docs/_site/api/python/index.html\">Documentación de la API</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741475_707713133",
      "id": "20171102-112550_410534992",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33305"
    },
    {
      "text": "%md\n### Creación de grafo\n\n* Se crean a partir de `DataFrame` de aristas y/o vértices.\n* DataFrame de aristas debe tener las columnas `src` y `dst` (por lo menos).\n* DataFrame de vértices debe tener la columna `id` (por lo menos).\n* Los grafos son dirigidos.\n* Se almacenan con redundancia (vertex cut):\n  ![](http://spark.apache.org/docs/latest/img/edge_cut_vs_vertex_cut.png)\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Creación de grafo</h3>\n<ul>\n  <li>Se crean a partir de <code>DataFrame</code> de aristas y/o vértices.</li>\n  <li>DataFrame de aristas debe tener las columnas <code>src</code> y <code>dst</code> (por lo menos).</li>\n  <li>DataFrame de vértices debe tener la columna <code>id</code> (por lo menos).</li>\n  <li>Los grafos son dirigidos.</li>\n  <li>Se almacenan con redundancia (vertex cut):<br/> <img src=\"http://spark.apache.org/docs/latest/img/edge_cut_vs_vertex_cut.png\" /></li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741475_301109732",
      "id": "20181027-002925_1222103561",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33306"
    },
    {
      "text": "%md\n### Veamos un ejemplo:\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Veamos un ejemplo:</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_1572000801",
      "id": "20201030-111511_962191836",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33307"
    },
    {
      "text": "%pyspark\n\nfrom graphframes import *\n\n# DataFrame de vértices\nv = spark.createDataFrame([\n  (\"a\", \"Alice\", 34),\n  (\"b\", \"Bob\", 36),\n  (\"c\", \"Charlie\", 30),\n  (\"d\", \"David\", 29),\n  (\"e\", \"Esther\", 32),\n  (\"f\", \"Fanny\", 36),\n  (\"g\", \"Gabby\", 60)\n],[\"id\", \"name\", \"age\"])\n\n# DataFrame de aristas\ne = spark.createDataFrame([\n  (\"a\", \"b\", \"amigo\"),\n  (\"b\", \"c\", \"sigue\"),\n  (\"c\", \"b\", \"sigue\"),\n  (\"f\", \"c\", \"sigue\"),\n  (\"e\", \"f\", \"sigue\"),\n  (\"e\", \"d\", \"amigo\"),\n  (\"d\", \"a\", \"amigo\"),\n  (\"a\", \"e\", \"amigo\"),\n  (\"a\", \"h\", \"amigo\")\n], [\"src\", \"dst\", \"relationship\"])\n\n# Creacion de GraphFrame\ng = GraphFrame(v, e)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:15:50+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_394436655",
      "id": "20181027-003337_2137373030",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:15:50+0000",
      "dateFinished": "2021-11-04T17:16:11+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33308"
    },
    {
      "text": "%pyspark\n\nz.show(g.vertices)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:16:38+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 304,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tage\na\tAlice\t34\nb\tBob\t36\nc\tCharlie\t30\nd\tDavid\t29\ne\tEsther\t32\nf\tFanny\t36\ng\tGabby\t60\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=0",
              "$$hashKey": "object:34226"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=1",
              "$$hashKey": "object:34227"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=2",
              "$$hashKey": "object:34228"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_2092404921",
      "id": "20181027-004033_1700498403",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:16:38+0000",
      "dateFinished": "2021-11-04T17:16:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33309"
    },
    {
      "text": "%pyspark\n\nz.show(g.edges)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:16:48+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 356,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "relationship": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\trelationship\na\tb\tamigo\nb\tc\tsigue\nc\tb\tsigue\nf\tc\tsigue\ne\tf\tsigue\ne\td\tamigo\nd\ta\tamigo\na\te\tamigo\na\th\tamigo\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=3",
              "$$hashKey": "object:34268"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=4",
              "$$hashKey": "object:34269"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=5",
              "$$hashKey": "object:34270"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_707854114",
      "id": "20181027-004041_1915960464",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:16:48+0000",
      "dateFinished": "2021-11-04T17:16:49+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33310"
    },
    {
      "text": "%pyspark\n\n# Query: Get in-degree of each vertex.\n#z.show(g.inDegrees)\nz.show(g.outDegrees)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:16:53+0000",
      "progress": 6,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "outDegree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\toutDegree\nf\t1\ne\t2\nd\t1\nc\t1\nb\t1\na\t3\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=6",
              "$$hashKey": "object:34310"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=7",
              "$$hashKey": "object:34311"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=8",
              "$$hashKey": "object:34312"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=9",
              "$$hashKey": "object:34313"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=10",
              "$$hashKey": "object:34314"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_2021372979",
      "id": "20191205-202553_1454342767",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:16:53+0000",
      "dateFinished": "2021-11-04T17:16:57+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33311"
    },
    {
      "text": "%pyspark\n\n\n# Query: Count the number of \"follow\" connections in the graph.\n\nprint(\"Cantidad de amistades:\", \n        g.edges.filter(\"relationship = 'amigo'\").count())\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:16:59+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de amistades: 5\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=11",
              "$$hashKey": "object:34339"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_1324406297",
      "id": "20191205-202527_215305701",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:16:59+0000",
      "dateFinished": "2021-11-04T17:16:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33312"
    },
    {
      "text": "%md\n### PageRank\n\n#### Se calcula: $$PR(p_i) = \\frac{\\epsilon}{N} + (1-\\epsilon) \\sum_{p_j \\in M(p_i)} \\frac{PR (p_j)}{L(p_j)}$$\n* donde \\\\(N\\\\) es la cantidad de paginas, \n* \\\\(\\epsilon\\\\) es la probabilidad de quedarse en la pagina (*reset probability*), \n* \\\\(M(p_i)\\\\) son las páginas a las que apunta \\\\(p_i\\\\) y \n* \\\\(L(p_j)\\\\) es la cantidad e links de la página \\\\(p_j\\\\).\n\n\n![](https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/00_introduccion/page_rank.png)\n\n\nMás info en [PageRank](https://es.wikipedia.org/wiki/PageRank).",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>PageRank</h3>\n<h4>Se calcula: $$PR(p_i) = \\frac{\\epsilon}{N} + (1-\\epsilon) \\sum_{p_j \\in M(p_i)} \\frac{PR (p_j)}{L(p_j)}$$</h4>\n<ul>\n<li>donde \\(N\\) es la cantidad de paginas,</li>\n<li>\\(\\epsilon\\) es la probabilidad de quedarse en la pagina (<em>reset probability</em>),</li>\n<li>\\(M(p_i)\\) son las páginas a las que apunta \\(p_i\\) y</li>\n<li>\\(L(p_j)\\) es la cantidad e links de la página \\(p_j\\).</li>\n</ul>\n<p><img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/00_introduccion/page_rank.png\" alt=\"\" /></p>\n<p>Más info en <a href=\"https://es.wikipedia.org/wiki/PageRank\">PageRank</a>.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_964696335",
      "id": "paragraph_1634844119648_1955861883",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33313"
    },
    {
      "title": "PageRank",
      "text": "%pyspark\n\n# Run PageRank algorithm, and show results.\nresults = g.pageRank(resetProbability=0.01, maxIter=10)\n\nz.show(results.vertices.select(\"id\", \"pagerank\"))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:17:14+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "id",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "pagerank",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0,
                          "direction": "desc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "pagerank": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tpagerank\ng\t0.011647254575707162\nb\t3.6199424699159937\ne\t0.03848486478566412\na\t0.05421739436354941\nf\t0.0347707909956736\nd\t0.0347707909956736\nc\t3.206166434367738\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=12",
              "$$hashKey": "object:34387"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=13",
              "$$hashKey": "object:34388"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=14",
              "$$hashKey": "object:34389"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=15",
              "$$hashKey": "object:34390"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=16",
              "$$hashKey": "object:34391"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=17",
              "$$hashKey": "object:34392"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=18",
              "$$hashKey": "object:34393"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=19",
              "$$hashKey": "object:34394"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=20",
              "$$hashKey": "object:34395"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=21",
              "$$hashKey": "object:34396"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=22",
              "$$hashKey": "object:34397"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=23",
              "$$hashKey": "object:34398"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=24",
              "$$hashKey": "object:34399"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=25",
              "$$hashKey": "object:34400"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=26",
              "$$hashKey": "object:34401"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=27",
              "$$hashKey": "object:34402"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=28",
              "$$hashKey": "object:34403"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=29",
              "$$hashKey": "object:34404"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=30",
              "$$hashKey": "object:34405"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_2137385522",
      "id": "20191205-202719_809801770",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:17:14+0000",
      "dateFinished": "2021-11-04T17:18:31+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33314"
    },
    {
      "title": "Guardemos el grafo",
      "text": "%pyspark\nfrom pyspark.sql.functions import col\n\ng.edges.printSchema()\n\ng.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"relationship\") \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"g_edges.csv\", mode=\"overwrite\", header=True)\n\n# .coalesce(1): para guardar en un solo archivo. por defecto spark guarda cada partecita de la cual el nodo del cluster se hace # cargo.\n# Esto no es muy eficiente porque tiene que juntar moviendo datos por la red, haciéndolo lento.\n\n# Ver que pasa sin coalesce -> crea 8 archivos csv (8 núcleos del procesador)",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:21:39+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- relationship: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=31",
              "$$hashKey": "object:34458"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_1717009785",
      "id": "20201029-163912_1652236873",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:21:39+0000",
      "dateFinished": "2021-11-04T17:21:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33315"
    },
    {
      "text": "%md\n## Ejemplo Red de Usuarios Twitter",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Ejemplo Red de Usuarios Twitter</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741476_1842782945",
      "id": "20181024-105040_178046617",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33316"
    },
    {
      "title": "Load Tweets",
      "text": "%pyspark\n\ntweets = spark.read.parquet(\"../../diplodatos_bigdata/ds/tweets.pqt\")\n\nprint(\"Cantidad de tweets:\", tweets.count())\n\nz.show(tweets.limit(10))\n# RT_times es la cantidad de veces que el usuario retweeteo el tweet\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:21:47+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "timestamp": "string",
                      "user": "string",
                      "RT_by": "string",
                      "RT_times": "string",
                      "text": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de tweets: 172040\n\n"
          },
          {
            "type": "TABLE",
            "data": "timestamp\tuser\tRT_by\tRT_times\ttext\n1487970896\tierrejon\tteresapititesa\t2\tRT @ierrejon: Aulas masificadas, falta de profesorado, precariedad laboral para docentes... ¿Así pretende el PP garantizar el fut…\n1487971010\tRobiBaradel\titoferrero\t1\tRT @RobiBaradel: Nos parece muy sano que los ciudadanos sumen su tiempo y su compromiso a la Educación Pública, los esperamos todo e…\n1487971052\tvilma_ripoll\tPabloIannuzzi\t3\tRT @vilma_ripoll: Los \"voluntarios\"contra el paro docente, son carneros. Los docentes defienden su salario y la escuela pública. Apoyemos e…\n1487971121\tfargosi\tPiaAsao\t3\tRT @fargosi: Hay otros medios de protesta. Las huelgas docentes son inconstitucionales por las convenciones de Derechos del Niño. Jueces, a…\n1487971177\tGFrondizi\ttepergmailcomP1\t3\tRT @GFrondizi: Pido algún fiscal por incumplimiento del deber de educar a los niños de la nación Pena con cárcel p baradel Exijo q…\n1487971184\tRobiBaradel\tAnaliavc1\t41\tRT @RobiBaradel: Nos parece muy sano que los ciudadanos sumen su tiempo y su compromiso a la Educación Pública, los esperamos todo e…\n1487971345\tSuperSecretario\tari2271\t12\tRT @SuperSecretario: #Cambiemos sacó solo 1,5% pq en su spot no prometió Voluntarios para reemplazar Docentes. Si se avivaban arrasaban!  h…\n1487971368\tMarinaVolpe12\tBocaLocura312\t1\tRT @MarinaVolpe12: No se ofrezcan nunca como Médicos voluntarios.Si hacen como MM, te saca el hígado y pide disculpas xq se equivovó #Volun…\n1487971408\tlanacionmas\tsusanamartimari\t2\tRT @lanacionmas: ¿Qué opinás de la propuesta #VoluntarioDocenteNoAlParo que se generó en las redes sociales a partir del paro nacional? #La…\n1487971469\taeronauticosCFK\tandrea7533\t17\tRT @aeronauticosCFK: #ApoyoALosMaestros Para estas cosas sobra la guita. Son patéticos https://t.co/6BW6eGZYpT\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=32",
              "$$hashKey": "object:34511"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=33",
              "$$hashKey": "object:34512"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=34",
              "$$hashKey": "object:34513"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741477_218281680",
      "id": "20171101-124010_495006264",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:21:47+0000",
      "dateFinished": "2021-11-04T17:21:49+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33317"
    },
    {
      "text": "%md\n### Definición de la red de usuarios:\n\n* Queremos que un **usuario A esté conectado con usuario B** si B retweeteó un mensaje de A.\n* Queremos también la cantidad de retweets que hizo B de mensajes de A **distintos o no**.",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Definición de la red de usuarios:</h3>\n<ul>\n<li>Queremos que un <strong>usuario A esté conectado con usuario B</strong> si B retweeteó un mensaje de A.</li>\n<li>Queremos también la cantidad de retweets que hizo B de mensajes de A <strong>distintos o no</strong>.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_281302882",
      "id": "20181024-111922_1953182558",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33318"
    },
    {
      "title": "Generamos las conecciones por usuarios",
      "text": "%pyspark\n\nfrom pyspark.sql.functions import sum, count\n\ntwitterConnections = tweets \\\n                        .groupBy(\"user\", \"RT_by\") \\\n                        .agg(sum(\"RT_times\").alias(\"count_RT\"), count(\"*\").alias(\"count_distinct_RT\"))\n\nprint(\"Cantidad de conecciones:\", twitterConnections.count())\n\nz.show(twitterConnections.limit(20))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:21:54+0000",
      "progress": 87,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "RT_by": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "RT_by": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de conecciones: 152613\n\n"
          },
          {
            "type": "TABLE",
            "data": "user\tRT_by\tcount_RT\tcount_distinct_RT\nWolffWaldo\txenia43sailor\t69\t1\natlanticsurff\tpaulobeni\t8\t1\nRuben_Rischmann\tPPperonoelsapo\t23\t1\nWolffWaldo\tMariePes72\t14\t1\nromerodiario\tRcaRawson\t4\t1\npablen2012\tNattyJuliAle\t4\t1\nMaestroPortenio\tsamuelevyARG\t14\t1\nLaAlfareraOk\taka_Mister\t33\t1\nertenembaum\tfertso\t4\t1\nBrujaUniversal\tO_Fer_\t6\t1\nmis2centavos\tmapolo1978\t2\t1\nlucaslauriente\t_Felpa_\t1\t1\nPajaritaTW\toscarcapellini\t6\t1\nArgentinaSoy1\t88lamaga\t82\t1\nel_telegrafo\tamaia78\t1\t1\nDEM___\taquisiclaudia\t79\t1\nLauraadri\tarturomakko\t12\t1\nscorohernan\tgustavospektor\t6\t1\nCondenaNacional\tSyl_Vicious\t3\t1\nhanalfabeto\tOsvaM55\t18\t2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=35",
              "$$hashKey": "object:34570"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=36",
              "$$hashKey": "object:34571"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_1751663161",
      "id": "20171101-121958_1394663112",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:21:54+0000",
      "dateFinished": "2021-11-04T17:21:58+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33319"
    },
    {
      "title": "Hay que renombrar las conexiones de tweeter:",
      "text": "%pyspark\n\nfrom pyspark.sql.functions import col\n\nedgesDF = twitterConnections \\\n    .select(col(\"user\").alias(\"src\"), \n            col(\"RT_by\").alias(\"dst\"),\n            \"count_RT\", \"count_distinct_RT\")\n                                       \nz.show(edgesDF.limit(10))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:22:48+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\tcount_RT\tcount_distinct_RT\nWolffWaldo\txenia43sailor\t69\t1\natlanticsurff\tpaulobeni\t8\t1\nRuben_Rischmann\tPPperonoelsapo\t23\t1\nWolffWaldo\tMariePes72\t14\t1\nromerodiario\tRcaRawson\t4\t1\npablen2012\tNattyJuliAle\t4\t1\nMaestroPortenio\tsamuelevyARG\t14\t1\nLaAlfareraOk\taka_Mister\t33\t1\nertenembaum\tfertso\t4\t1\nBrujaUniversal\tO_Fer_\t6\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=37",
              "$$hashKey": "object:34609"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_1094066930",
      "id": "20171101-124136_101875926",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:22:48+0000",
      "dateFinished": "2021-11-04T17:22:49+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33320"
    },
    {
      "title": "Hay que crear el DF de vértices",
      "text": "%pyspark\n\nsrcs = edgesDF.select(col(\"src\").alias(\"id\"))\n\ndsts = edgesDF.select(col(\"dst\").alias(\"id\"))\n    \nvertexDF = srcs.unionAll(dsts).distinct()\n\nz.show(vertexDF.limit(10))\n    ",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:22:51+0000",
      "progress": 98,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\nElGorilaje\nflordecaribe\nl_p_o\nPiru_laura\nbudano_ignacio\nRepettoLidia\nLilianaTren\ndefensoria_bol\nMIGUE67MIGUE\ncarlito60322427\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=38",
              "$$hashKey": "object:34645"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_571831978",
      "id": "20191206-163757_2138250663",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:22:52+0000",
      "dateFinished": "2021-11-04T17:22:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33321"
    },
    {
      "title": "Creación de GraphFrame:",
      "text": "%pyspark\n\nfrom graphframes import *\n\ngraph = GraphFrame(vertexDF, edgesDF).cache()\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:24:15+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_1783461127",
      "id": "20171101-124739_82230555",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:24:15+0000",
      "dateFinished": "2021-11-04T17:24:16+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33322"
    },
    {
      "text": "%md\n### Operaciones básicas sobre grafos\n\n#### A continuación veremos como calcular: \n* la cantidad de vértices (usuarios)\n* la cantidad de arístas (conexiones)\n* el grado de cada vértice (cantidad de conexiones por usuario)",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Operaciones básicas sobre grafos</h3>\n<h4>A continuación veremos como calcular:</h4>\n<ul>\n  <li>la cantidad de vértices (usuarios)</li>\n  <li>la cantidad de arístas (conexiones)</li>\n  <li>el grado de cada vértice (cantidad de conexiones por usuario)</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_425631333",
      "id": "20171102-153102_880120870",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33323"
    },
    {
      "title": "Tamaño del grafo",
      "text": "%pyspark\n\nverticesCount = graph.vertices.count()\n\nedgesCount = graph.edges.count()\n\nprint(f\"\"\"%table\nCantidad de usuarios \\t Cantidad de conecciones\n{verticesCount} \\t {edgesCount}\"\"\")\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:24:21+0000",
      "progress": 66,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Cantidad de usuarios ": "string",
                      " Cantidad de conecciones": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Cantidad de usuarios \t Cantidad de conecciones\n57138 \t 152613\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=39",
              "$$hashKey": "object:34702"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=40",
              "$$hashKey": "object:34703"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_1081246508",
      "id": "20171101-124845_773490911",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:24:21+0000",
      "dateFinished": "2021-11-04T17:24:30+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33324"
    },
    {
      "title": "Cantidad de conecciones por usuario",
      "text": "%pyspark\n\nnodesDegree = graph.degrees\n\nsortedByDegree = nodesDegree.orderBy(\"degree\", ascending=False) # degree es sin direccionalidad (diferente a inDengree u outDegree)\n\nz.show(sortedByDegree.limit(10))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T20:26:23+0000",
      "progress": 87,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tdegree\nWinston_Dunhill\t2325\nfernandocarnota\t1745\nsantosjorgeh\t1657\nlanatoparatodos\t1529\nRobiBaradel\t1483\nJorgeFavaloro\t1483\nelcoya1977\t1471\neldestapeweb\t1441\nlucaslauriente\t1422\nbetovaldez\t1407\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=41",
              "$$hashKey": "object:34741"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741478_16731001",
      "id": "20171102-131720_1147432214",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:24:40+0000",
      "dateFinished": "2021-11-04T17:24:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33325"
    },
    {
      "text": "%md\n\n## Ejemplo Agregación de Mensajes\n\n### Influencia Colectiva\n\n#### Aplicaciones: \n* Marketing viral (influencia de opinión)\n* Detección de focos de dispersión de enfermedades\n* ...\n\n#### Cómo funciona:\n* Primero se calcula la **Influencia Colectiva (CI)**\n* En cada iteración elimina del grafo el nodo de mayor CI y recalcula el CI de los nodos restantes\n* Termina cuando la componente gigante se destruye\n* Solución básica: \\\\(O(N2)\\\\). Optimizada: \\\\(O(NlogN)\\\\)\n\n> Influence maximization in complex networks through optimal percolation” (Flaviano Morone, Hernán A. Makse, 27 Jun 2015) https://arxiv.org/abs/1506.08326\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Ejemplo Agregación de Mensajes</h2>\n<h3>Influencia Colectiva</h3>\n<h4>Aplicaciones:</h4>\n<ul>\n  <li>Marketing viral (influencia de opinión)</li>\n  <li>Detección de focos de dispersión de enfermedades</li>\n  <li>&hellip;</li>\n</ul>\n<h4>Cómo funciona:</h4>\n<ul>\n  <li>Primero se calcula la <strong>Influencia Colectiva (CI)</strong></li>\n  <li>En cada iteración elimina del grafo el nodo de mayor CI y recalcula el CI de los nodos restantes</li>\n  <li>Termina cuando la componente gigante se destruye</li>\n  <li>Solución básica: \\(O(N2)\\). Optimizada: \\(O(NlogN)\\)</li>\n</ul>\n<blockquote>\n  <p>Influence maximization in complex networks through optimal percolation” (Flaviano Morone, Hernán A. Makse, 27 Jun 2015) <a href=\"https://arxiv.org/abs/1506.08326\">https://arxiv.org/abs/1506.08326</a></p>\n</blockquote>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741479_352264484",
      "id": "20171102-132006_1774167041",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33326"
    },
    {
      "text": "%md\n### Fórmula de CI\n\nLa formula de collective influence para un vértice \\\\(i\\\\) es:\n\n$$ CI(i) = (degree_i -  1) \\times \\sum\\limits_{j \\in vecinos(i)} (degree_j -  1)$$\n\nSe supone un grafo **no dirigido**.\n\n### Pasos para calcular collective influence son:\n\n* agregar el grado (degree) de cada nodo al grafo.\n* importar `AggregateMessages`.\n* calcular collective influence de cada individuo usando `AggregateMessages` de `GraphFrame`\n* ordenar los individuos por su collective influence de mayor a menor\n* imprimir el listado de individuos\n\n\n#### Documentación para implementar con GraphFrames:\n\n* Documentación sobre [AggregateMessages](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#message-passing-via-aggregatemessages) con ejemplo.\n* Documentación de [API AggregateMessages](https://graphframes.github.io/graphframes/docs/_site/api/python/graphframes.html).\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Fórmula de CI</h3>\n<p>La formula de collective influence para un vértice \\(i\\) es:</p>\n<p>$$ CI(i) = (degree_i - 1) \\times \\sum\\limits_{j \\in vecinos(i)} (degree_j - 1)$$</p>\n<p>Se supone un grafo <strong>no dirigido</strong>.</p>\n<h3>Pasos para calcular collective influence son:</h3>\n<ul>\n  <li>agregar el grado (degree) de cada nodo al grafo.</li>\n  <li>importar <code>AggregateMessages</code>.</li>\n  <li>calcular collective influence de cada individuo usando <code>AggregateMessages</code> de <code>GraphFrame</code></li>\n  <li>ordenar los individuos por su collective influence de mayor a menor</li>\n  <li>imprimir el listado de individuos</li>\n</ul>\n<h4>Documentación para implementar con GraphFrames:</h4>\n<ul>\n  <li>Documentación sobre <a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#message-passing-via-aggregatemessages\">AggregateMessages</a> con ejemplo.</li>\n  <li>Documentación de <a href=\"https://graphframes.github.io/graphframes/docs/_site/api/python/graphframes.html\">API AggregateMessages</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741479_1112139668",
      "id": "20171102-131904_821311339",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33327"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.sql.functions import sum\nfrom graphframes.lib import AggregateMessages as AM\n\n#Creo un nuevo grafo con los nodos y su degree (disponible en nodesDegree) y las aristas originales\ndegreeGraph = GraphFrame(nodesDegree, graph.edges )\n# Aristas y vértices están bien particionadas\n\n\n# Comenzamos a calcular CI \n\n# Cada nodo envia su degree-1 a sus vecinos a traves de sus conecciones salientes y entrantes\nmsgToDst = AM.src[\"degree\"] - 1\nmsgToSrc = AM.dst[\"degree\"] - 1\n\n# El DataFrame sumNeighborDegrees debe tener 2 columnas: id del nodo y sum_neighbor_degree \nsumNeighborDegrees = degreeGraph.aggregateMessages(\n    sum(AM.msg).alias(\"sum_neighbor_degree\"), # Hace aggregation en cada nodo sobre los mensages recibidos \n    sendToDst=msgToDst, # Envia a vecino por coneccion saliente\n    sendToSrc=msgToSrc) # Envia a vecino por coneccion entrante\n\n\n# Join de sumNeighborDegrees con degrees para tener todas las columnas necesarias para calcular CI.\n\nnodesDegreeJoin = nodesDegree.join(sumNeighborDegrees,\"id\")\n\n# Calculamos CI: para terminar de calcularlo debemos multiplicar la sumatoria del paso anterior por degree - 1 de cada nodo.\n# El DataFrame collectiveInfluence debe tener 2 columnas: id, ci y degree\n# Por ultimo ordena descendentemente por ci \n\ncollectiveInfluence = nodesDegreeJoin \\\n                          .select( ((col(\"degree\") - 1) * col(\"sum_neighbor_degree\")).alias(\"ci\"), \n                                    \"id\", \n                                    \"degree\") \\\n                          .orderBy(\"ci\", ascending=False) \\\n                          .cache()\n\nz.show(collectiveInfluence.limit(20))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:25:41+0000",
      "progress": 29,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "ci": "string",
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "ci\tid\tdegree\n71551312\tWinston_Dunhill\t2325\n57822552\tsantosjorgeh\t1657\n55026688\tfernandocarnota\t1745\n45848634\tJorgeFavaloro\t1483\n42052088\tlanatoparatodos\t1529\n37856910\telcoya1977\t1471\n33925374\tbetovaldez\t1407\n31175045\tLaBelgrana\t606\n30129480\tfargosi\t1271\n29494764\tRobiBaradel\t1483\n27043120\tcopi__\t1041\n23379462\tNunkMasKs\t1027\n18770024\tConCiencia2015\t533\n17316472\tWolffWaldo\t812\n16165470\tHugoYasky\t987\n15975882\tmis2centavos\t1020\n15693120\teldestapeweb\t1441\n15118908\tCarlos_AD_Viola\t533\n14284499\tCTAok\t830\n14149350\tEdgardoRovira\t1176\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=42",
              "$$hashKey": "object:34801"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=43",
              "$$hashKey": "object:34802"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=44",
              "$$hashKey": "object:34803"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=45",
              "$$hashKey": "object:34804"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=46",
              "$$hashKey": "object:34805"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=47",
              "$$hashKey": "object:34806"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741479_1261325363",
      "id": "20171101-125025_1054455316",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:25:41+0000",
      "dateFinished": "2021-11-04T17:26:05+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33328"
    },
    {
      "text": "%md\n## Motif Finding\n\n* Es un Domain-Specific Language (DSL) para expresar queries.\n* La unidad básica es la expresión de una arista\n\n### Ejemplos\n\n* `graph.find(\"(a)-[e]->(b); (b)-[e2]->(a)\")` expresa vértices unidos en ambas direcciones.\n    - Devuelve un DataFrame con columnas `\"a\"`, `\"b\"`, `\"e\"` y `\"e2\"`.\n* `graph.find(\"(a)-[e]->(b); (b)-[e2]->(c)\")` expresa dos aristas pegadas con un vértice común `b`. \n\n### Documentacion y ejemplo\n\n* [GraphFrame User Guide](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding).\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Motif Finding</h2>\n<ul>\n  <li>Es un Domain-Specific Language (DSL) para expresar queries.</li>\n  <li>La unidad básica es la expresión de una arista</li>\n</ul>\n<h3>Ejemplos</h3>\n<ul>\n  <li><code>graph.find(&quot;(a)-[e]-&gt;(b); (b)-[e2]-&gt;(a)&quot;)</code> expresa vértices unidos en ambas direcciones.\n    <ul>\n      <li>Devuelve un DataFrame con columnas <code>&quot;a&quot;</code>, <code>&quot;b&quot;</code>, <code>&quot;e&quot;</code> y <code>&quot;e2&quot;</code>.</li>\n    </ul>\n  </li>\n  <li><code>graph.find(&quot;(a)-[e]-&gt;(b); (b)-[e2]-&gt;(c)&quot;)</code> expresa dos aristas pegadas con un vértice común <code>b</code>.</li>\n</ul>\n<h3>Documentacion y ejemplo</h3>\n<ul>\n  <li><a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding\">GraphFrame User Guide</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741479_1764892173",
      "id": "20181027-013740_419047675",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33329"
    },
    {
      "text": "%md\n### Recordemos el grafo",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Recordemos el grafo</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741480_320789202",
      "id": "paragraph_1634934672760_445886262",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33330"
    },
    {
      "text": "%pyspark\nz.show(g.vertices)",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:27:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tage\na\tAlice\t34\nb\tBob\t36\nc\tCharlie\t30\nd\tDavid\t29\ne\tEsther\t32\nf\tFanny\t36\ng\tGabby\t60\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=48",
              "$$hashKey": "object:34876"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=49",
              "$$hashKey": "object:34877"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=50",
              "$$hashKey": "object:34878"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741480_1640914164",
      "id": "paragraph_1634934258381_857174466",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:27:12+0000",
      "dateFinished": "2021-11-04T17:27:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33331"
    },
    {
      "text": "%pyspark\nz.show(g.edges)",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:27:15+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "relationship": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\trelationship\na\tb\tamigo\nb\tc\tsigue\nc\tb\tsigue\nf\tc\tsigue\ne\tf\tsigue\ne\td\tamigo\nd\ta\tamigo\na\te\tamigo\na\th\tamigo\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=51",
              "$$hashKey": "object:34918"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=52",
              "$$hashKey": "object:34919"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=53",
              "$$hashKey": "object:34920"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741480_1495334054",
      "id": "paragraph_1634934349934_2020230166",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:27:15+0000",
      "dateFinished": "2021-11-04T17:27:16+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33332"
    },
    {
      "text": "%md\n### Hagamos algunos queries",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Hagamos algunos queries</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741480_50186344",
      "id": "paragraph_1634934687488_918172403",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33333"
    },
    {
      "text": "%pyspark\n\n# Buscar pares de vértices en ambas direccione:\nmotifs = g.find(\"(a)-[e1]->(b); (b)-[e2]->(a)\")\n\nmotifs.printSchema()\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:27:41+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- a: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- age: long (nullable = true)\n |-- e1: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- relationship: string (nullable = true)\n |-- b: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- age: long (nullable = true)\n |-- e2: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- relationship: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741480_2070539996",
      "id": "20181027-015100_1394496292",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:27:41+0000",
      "dateFinished": "2021-11-04T17:27:42+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33334"
    },
    {
      "text": "%pyspark\n\nz.show(motifs) # es una tabla de tablas\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:27:58+0000",
      "progress": 4,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\n[c,Charlie,30]\t[c,b,sigue]\t[b,Bob,36]\t[b,c,sigue]\n[b,Bob,36]\t[b,c,sigue]\t[c,Charlie,30]\t[c,b,sigue]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=54",
              "$$hashKey": "object:34986"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=55",
              "$$hashKey": "object:34987"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=56",
              "$$hashKey": "object:34988"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=57",
              "$$hashKey": "object:34989"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=58",
              "$$hashKey": "object:34990"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741480_1007456866",
      "id": "20181027-015533_344573808",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:27:58+0000",
      "dateFinished": "2021-11-04T17:28:01+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33335"
    },
    {
      "text": "%pyspark\n# Despues se pueden aplicar filtros para queries mas complejos.\nz.show(motifs.filter(\"b.age > 30\"))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:28:15+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\n[c,Charlie,30]\t[c,b,sigue]\t[b,Bob,36]\t[b,c,sigue]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=59",
              "$$hashKey": "object:35034"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=60",
              "$$hashKey": "object:35035"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=61",
              "$$hashKey": "object:35036"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=62",
              "$$hashKey": "object:35037"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=63",
              "$$hashKey": "object:35038"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741480_127904715",
      "id": "20201030-112416_1681452862",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:28:15+0000",
      "dateFinished": "2021-11-04T17:28:17+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33336"
    },
    {
      "text": "%md\n## Visualización\n\nA continuación visualizaremos con [Gephi](https://gephi.org/) la parte del grafo (subgrafo) que contiene los mayores influencers.\n\nPara ello generaremos archivos *csv* como entrada de esta herramienta ",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Visualización</h2>\n<p>A continuación visualizaremos con <a href=\"https://gephi.org/\">Gephi</a> la parte del grafo (subgrafo) que contiene los mayores influencers.</p>\n<p>Para ello generaremos archivos <em>csv</em> como entrada de esta herramienta</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_413379359",
      "id": "20171102-160936_360694508",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33337"
    },
    {
      "text": "%pyspark\n\nminCI = 29000000\nminDegree = 600\n\n# tomo los usarios con mayor influencia o con más conecciones\nciTops = collectiveInfluence \\\n    .filter((col(\"ci\") >= minCI) | (col(\"degree\") >= minDegree))\n\ngInfluencers = GraphFrame(ciTops, graph.edges)\n\n# Tomo solo las aristas que tengan vértices\nveTops = gInfluencers.find(\"(a)-[e]->(b)\") \\\n                .cache()\n      \n                \nprint(\"Cantidad de top influencers:\", veTops.count())\n\nveTops.printSchema()\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:28:22+0000",
      "progress": 58,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e": "string",
                      "b": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de top influencers: 35\nroot\n |-- a: struct (nullable = false)\n |    |-- ci: long (nullable = true)\n |    |-- id: string (nullable = true)\n |    |-- degree: integer (nullable = false)\n |-- e: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n |-- b: struct (nullable = false)\n |    |-- ci: long (nullable = true)\n |    |-- id: string (nullable = true)\n |    |-- degree: integer (nullable = false)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=64",
              "$$hashKey": "object:35075"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=65",
              "$$hashKey": "object:35076"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=66",
              "$$hashKey": "object:35077"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_470062783",
      "id": "20171102-000354_1806019706",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:28:22+0000",
      "dateFinished": "2021-11-04T17:28:24+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33338"
    },
    {
      "text": "%pyspark\n\neTops = veTops.select(\"e.*\")\n\neTops.printSchema()\n\n# Grafo de los tops\ngTops = GraphFrame(ciTops, eTops)\n\n\n# guardo un csv con los vertices para Gephi \ngTops.vertices \\\n        .select(\"*\", col(\"id\").alias(\"Label\")) \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"/logs/top_influencers.csv\", mode=\"overwrite\", header=True)\n# agrego / en path para guardar\n\n# guardo un csv con las aristas para Gephi\ngTops.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"count_RT\",\"count_distinct_RT\") \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"/logs/top_edges.csv\", mode=\"overwrite\", header=True)\n# agrego / en path para guardar",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T17:28:25+0000",
      "progress": 12,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- count_RT: long (nullable = true)\n |-- count_distinct_RT: long (nullable = false)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=67",
              "$$hashKey": "object:35098"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=68",
              "$$hashKey": "object:35099"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_2025815007",
      "id": "20181027-020144_852191582",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T17:28:25+0000",
      "dateFinished": "2021-11-04T17:28:27+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33339"
    },
    {
      "text": "%md\n### Gephi\n\nLanzar el programa desde una terminal ejecutando:\n\n```sh\ngephi-0.9.2/bin/gephi\n```\n\nSeguir las instrucciones del profesor.",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Gephi</h3>\n<p>Lanzar el programa desde una terminal ejecutando:</p>\n<pre><code class=\"language-sh\">gephi-0.9.2/bin/gephi\n</code></pre>\n<p>Seguir las instrucciones del profesor.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_1104419946",
      "id": "20171102-161414_1207858851",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33340"
    },
    {
      "text": "%md\n### Ejercicio\n\nComplete el siguiente programa para calcular el grafo de todas las posibles conexiones a los 5 mayores influenciadores y graficar el resultado con Gephi. \n\n#### Ayuda\n* Busque en la documentación [Api Datasets](http://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.Dataset) algún método que devuelva las *n* primeras files de un Dataset equivalente a la directiva SQL `LIMIT`. \n* Para llenar el comando `find` busque la documentación de [Motif finding](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding).",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Ejercicio</h3>\n<p>Complete el siguiente programa para calcular el grafo de todas las posibles conexiones a los 5 mayores influenciadores y graficar el resultado con Gephi. </p>\n<h4>Ayuda</h4>\n<ul>\n  <li>Busque en la documentación <a href=\"http://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.Dataset\">Api Datasets</a> algún método que devuelva las <em>n</em> primeras files de un Dataset equivalente a la directiva SQL <code>LIMIT</code>.</li>\n  <li>Para llenar el comando <code>find</code> busque la documentación de <a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding\">Motif finding</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_1869936049",
      "id": "20171102-110542_600666434",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33341"
    },
    {
      "text": "%pyspark\n\n#take top n\nnTopInfl = 5\n\ntopInfluencers = collectiveInfluence.limit(nTopInfl) # solo los 5 primeros. Uso limit porque el df está ordenado con CI decreciente\n\n# Guardo Vértices\ntopInfluencers.select(\"*\", col(\"id\").alias(\"Label\")).coalesce(1) \\\n        .write \\\n        .csv(\"/logs/top_influencers2.csv\", mode=\"overwrite\", header=True) # cambio ruta a logs\n\ngTops2 = GraphFrame(topInfluencers, graph.edges)\n\neTops2 = gTops2.find(\"(a)-[e]->(b)\") \\\n    .select(col(\"e.src\").alias(\"Source\"),col(\"e.dst\").alias(\"Target\"), \"e.count_RT\", \"e.count_distinct_RT\")  # Encuentre las aristas que tienen vertices\n\neTops2.coalesce(1).write.csv(\"/logs/top_edges2.csv\", mode=\"overwrite\", header=True) # cambio ruta a logs\n\nz.show(topInfluencers) # Visualizo dataset de TopInfluencers\n\n# Se grafica en Gephi con el nombre: \"ejercicio_top5_influencers\"",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T00:41:26+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "ci": "string",
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "ci": "string",
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "ci\tid\tdegree\n71551312\tWinston_Dunhill\t2325\n57822552\tsantosjorgeh\t1657\n55026688\tfernandocarnota\t1745\n45848634\tJorgeFavaloro\t1483\n42052088\tlanatoparatodos\t1529\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=84",
              "$$hashKey": "object:45166"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=85",
              "$$hashKey": "object:45167"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=86",
              "$$hashKey": "object:45168"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=87",
              "$$hashKey": "object:45169"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=88",
              "$$hashKey": "object:45170"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_550534315",
      "id": "20171101-170622_751215254",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "dateStarted": "2021-11-04T19:58:01+0000",
      "dateFinished": "2021-11-04T19:58:04+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33342"
    },
    {
      "text": "%pyspark\nz.show(gTops2.find(\"(a)-[e]->(b)\")) # Se observan solo dos aristas. Una de ellas sale y entra en el mismo nodo (\"fernandocarnota\")",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T20:22:31+0000",
      "progress": 25,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e": "string",
                      "b": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te\tb\n[57822552,santosjorgeh,1657]\t[santosjorgeh,JorgeFavaloro,79,1]\t[45848634,JorgeFavaloro,1483]\n[55026688,fernandocarnota,1745]\t[fernandocarnota,fernandocarnota,24,2]\t[55026688,fernandocarnota,1745]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=89",
              "$$hashKey": "object:35209"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=90",
              "$$hashKey": "object:35210"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=91",
              "$$hashKey": "object:35211"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=92",
              "$$hashKey": "object:35212"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=93",
              "$$hashKey": "object:35213"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=94",
              "$$hashKey": "object:35214"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=95",
              "$$hashKey": "object:35215"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636056585833_196521358",
      "id": "paragraph_1636056585833_196521358",
      "dateCreated": "2021-11-04T20:09:45+0000",
      "dateStarted": "2021-11-04T20:10:21+0000",
      "dateFinished": "2021-11-04T20:10:23+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33343"
    },
    {
      "text": "%md\n### Ejercicio\n\n0. Tomar el grafo de tweets y crear un dataframe con todas las aristas y vértices que forman triángulos dirigidos. O sea, todos los casos donde un usuario *A* retuitea a *B* que retuitea a *C* que retuitea a *A*.\n\n0. Hay casos donde los tres usuarios sean distintos?\n\n0. Graficar con Gephi el resultado.\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 12,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Ejercicio</h3>\n<ol>\n  <li>\n  <p>Tomar el grafo de tweets y crear un dataframe con todas las aristas y vértices que forman triángulos dirigidos. O sea, todos los casos donde un usuario <em>A</em> retuitea a <em>B</em> que retuitea a <em>C</em> que retuitea a <em>A</em>.</p></li>\n  <li>\n  <p>Hay casos donde los tres usuarios sean distintos?</p></li>\n  <li>\n  <p>Graficar con Gephi el resultado.</p></li>\n</ol>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_796190020",
      "id": "20201030-122513_420199213",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33344"
    },
    {
      "text": "%pyspark\n\n# 1.\n\ndirected_triangles = graph.find(\"(a)-[e1]->(b); (b)-[e2]->(c); (c)-[e3]->(a)\")\n\ndirected_triangles.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T00:49:01+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- a: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |-- e1: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n |-- b: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |-- e2: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n |-- c: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |-- e3: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636057357081_252968034",
      "id": "paragraph_1636057357081_252968034",
      "dateCreated": "2021-11-04T20:22:37+0000",
      "dateStarted": "2021-11-04T20:41:40+0000",
      "dateFinished": "2021-11-04T20:41:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33345"
    },
    {
      "text": "%pyspark\n\nz.show(directed_triangles.limit(10))",
      "user": "anonymous",
      "dateUpdated": "2021-11-04T20:41:48+0000",
      "progress": 14,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string",
                      "c": "string",
                      "e3": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\tc\te3\n[ngelDavidNieva1]\t[ngelDavidNieva1,ngelDavidNieva1,30,2]\t[ngelDavidNieva1]\t[ngelDavidNieva1,ngelDavidNieva1,30,2]\t[ngelDavidNieva1]\t[ngelDavidNieva1,ngelDavidNieva1,30,2]\n[ONCA_TvR_Arg]\t[ONCA_TvR_Arg,ONCA_TvR_Arg,2,1]\t[ONCA_TvR_Arg]\t[ONCA_TvR_Arg,ONCA_TvR_Arg,2,1]\t[ONCA_TvR_Arg]\t[ONCA_TvR_Arg,ONCA_TvR_Arg,2,1]\n[dccolectivo]\t[dccolectivo,judrh,2,1]\t[judrh]\t[judrh,mamibel09,8,1]\t[mamibel09]\t[mamibel09,dccolectivo,35,1]\n[agapearg51]\t[agapearg51,GabrielaMasista,58,1]\t[GabrielaMasista]\t[GabrielaMasista,adrianapellaca1,108,3]\t[adrianapellaca1]\t[adrianapellaca1,agapearg51,30,1]\n[rodolfoCeniz]\t[rodolfoCeniz,RuthPizzi,5,1]\t[RuthPizzi]\t[RuthPizzi,PabloMGener,41,1]\t[PabloMGener]\t[PabloMGener,rodolfoCeniz,42,1]\n[SandraDocente]\t[SandraDocente,C_Echegoyen,108,3]\t[C_Echegoyen]\t[C_Echegoyen,RipamontiRita,280,2]\t[RipamontiRita]\t[RipamontiRita,SandraDocente,15,1]\n[donofriojorge]\t[donofriojorge,waltervazquez21,18,3]\t[waltervazquez21]\t[waltervazquez21,GurtzDario,7,1]\t[GurtzDario]\t[GurtzDario,donofriojorge,11,1]\n[donofriojorge]\t[donofriojorge,waltervazquez21,18,3]\t[waltervazquez21]\t[waltervazquez21,donofriojorge,11,1]\t[donofriojorge]\t[donofriojorge,donofriojorge,44,4]\n[donofriojorge]\t[donofriojorge,waltervazquez21,18,3]\t[waltervazquez21]\t[waltervazquez21,Florenc32693350,6,1]\t[Florenc32693350]\t[Florenc32693350,donofriojorge,11,1]\n[formacionIB]\t[formacionIB,formacionIB,6,1]\t[formacionIB]\t[formacionIB,CooperacionIB,6,1]\t[CooperacionIB]\t[CooperacionIB,formacionIB,12,2]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=117",
              "$$hashKey": "object:35289"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=118",
              "$$hashKey": "object:35290"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=119",
              "$$hashKey": "object:35291"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=120",
              "$$hashKey": "object:35292"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=121",
              "$$hashKey": "object:35293"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=122",
              "$$hashKey": "object:35294"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636057801695_503553918",
      "id": "paragraph_1636057801695_503553918",
      "dateCreated": "2021-11-04T20:30:01+0000",
      "dateStarted": "2021-11-04T20:41:48+0000",
      "dateFinished": "2021-11-04T20:41:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33346"
    },
    {
      "text": "%pyspark\n\n# Ej. 2.\n\ndirected_triangles_distVert = directed_triangles \\\n        .filter(\"a.id != b.id\") \\\n        .filter(\"b.id != c.id\") \\\n        .filter(\"c.id != a.id\") # no encontré otra manera más eficiente de anidar condiciones en filter\n\ndirected_triangles_distVert.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T00:45:26+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- a: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |-- e1: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n |-- b: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |-- e2: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n |-- c: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |-- e3: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636058169714_164012153",
      "id": "paragraph_1636058169714_164012153",
      "dateCreated": "2021-11-04T20:36:09+0000",
      "dateStarted": "2021-11-05T00:45:26+0000",
      "dateFinished": "2021-11-05T00:45:27+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33347"
    },
    {
      "text": "%pyspark\n\nz.show(directed_triangles_distVert.limit(10))",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T00:45:33+0000",
      "progress": 45,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string",
                      "c": "string",
                      "e3": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string",
                      "c": "string",
                      "e3": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\tc\te3\n[dccolectivo]\t[dccolectivo,judrh,2,1]\t[judrh]\t[judrh,mamibel09,8,1]\t[mamibel09]\t[mamibel09,dccolectivo,35,1]\n[agapearg51]\t[agapearg51,GabrielaMasista,58,1]\t[GabrielaMasista]\t[GabrielaMasista,adrianapellaca1,108,3]\t[adrianapellaca1]\t[adrianapellaca1,agapearg51,30,1]\n[rodolfoCeniz]\t[rodolfoCeniz,RuthPizzi,5,1]\t[RuthPizzi]\t[RuthPizzi,PabloMGener,41,1]\t[PabloMGener]\t[PabloMGener,rodolfoCeniz,42,1]\n[SandraDocente]\t[SandraDocente,C_Echegoyen,108,3]\t[C_Echegoyen]\t[C_Echegoyen,RipamontiRita,280,2]\t[RipamontiRita]\t[RipamontiRita,SandraDocente,15,1]\n[donofriojorge]\t[donofriojorge,waltervazquez21,18,3]\t[waltervazquez21]\t[waltervazquez21,GurtzDario,7,1]\t[GurtzDario]\t[GurtzDario,donofriojorge,11,1]\n[donofriojorge]\t[donofriojorge,waltervazquez21,18,3]\t[waltervazquez21]\t[waltervazquez21,Florenc32693350,6,1]\t[Florenc32693350]\t[Florenc32693350,donofriojorge,11,1]\n[lizzieyn]\t[lizzieyn,ConCiencia2015,76,1]\t[ConCiencia2015]\t[ConCiencia2015,LaBelgrana,510,3]\t[LaBelgrana]\t[LaBelgrana,lizzieyn,20,1]\n[Carlos_AD_Viola]\t[Carlos_AD_Viola,PatriciaConti9,36,1]\t[PatriciaConti9]\t[PatriciaConti9,lilifinochietta,69,1]\t[lilifinochietta]\t[lilifinochietta,Carlos_AD_Viola,59,1]\n[ajfernandez2001]\t[ajfernandez2001,interinosMAD,52,4]\t[interinosMAD]\t[interinosMAD,JuanaSinarco3,13,1]\t[JuanaSinarco3]\t[JuanaSinarco3,ajfernandez2001,22,2]\n[ajfernandez2001]\t[ajfernandez2001,interinosMAD,52,4]\t[interinosMAD]\t[interinosMAD,AccesojustoNAD,30,2]\t[AccesojustoNAD]\t[AccesojustoNAD,ajfernandez2001,11,1]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=185",
              "$$hashKey": "object:45501"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=186",
              "$$hashKey": "object:45502"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=187",
              "$$hashKey": "object:45503"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=188",
              "$$hashKey": "object:45504"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=189",
              "$$hashKey": "object:45505"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=190",
              "$$hashKey": "object:45506"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=191",
              "$$hashKey": "object:45507"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636058754447_635237703",
      "id": "paragraph_1636058754447_635237703",
      "dateCreated": "2021-11-04T20:45:54+0000",
      "dateStarted": "2021-11-05T00:45:33+0000",
      "dateFinished": "2021-11-05T00:45:37+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33348"
    },
    {
      "text": "%pyspark\n\nn_dir_triang_distVert = directed_triangles_distVert.count()\n\nprint(\"Cantidad de triángulos dirigidos con sus 3 vértices diferentes: \", n_dir_triang_distVert)",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T00:46:02+0000",
      "progress": 18,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de triángulos dirigidos con sus 3 vértices diferentes:  1551\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=192",
              "$$hashKey": "object:46431"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=193",
              "$$hashKey": "object:46432"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=194",
              "$$hashKey": "object:46433"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=195",
              "$$hashKey": "object:46434"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=196",
              "$$hashKey": "object:46435"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=197",
              "$$hashKey": "object:46436"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636059560122_673659707",
      "id": "paragraph_1636059560122_673659707",
      "dateCreated": "2021-11-04T20:59:20+0000",
      "dateStarted": "2021-11-05T00:46:02+0000",
      "dateFinished": "2021-11-05T00:46:05+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33349"
    },
    {
      "text": "%pyspark\n\n# Ej. 3.\n\n# Extraigo aristas\n\nfrom functools import reduce\nfrom pyspark.sql import DataFrame\n\ne1_df = directed_triangles_distVert.select(\"e1.*\")\ne2_df = directed_triangles_distVert.select(\"e2.*\")\ne3_df = directed_triangles_distVert.select(\"e3.*\")\n\ne_df = [e1_df, e2_df, e3_df]\n\nedges_df = reduce(DataFrame.unionAll, e_df)\n\nedges_df.printSchema()\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T01:18:26+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636059779139_938672265",
      "id": "paragraph_1636059779139_938672265",
      "dateCreated": "2021-11-04T21:02:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33350",
      "dateFinished": "2021-11-05T01:18:26+0000",
      "dateStarted": "2021-11-05T01:18:26+0000",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- count_RT: long (nullable = true)\n |-- count_distinct_RT: long (nullable = false)\n\n"
          }
        ]
      }
    },
    {
      "text": "%pyspark\n\n# Extraigo vértices\n\nsrcs = edges_df.select(col(\"src\").alias(\"id\"))\n\ndsts = edges_df.select(col(\"dst\").alias(\"id\"))\n    \nvertices_df = srcs.unionAll(dsts).distinct()\n\nz.show(vertices_df.limit(10))",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T01:18:35+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\nwpicatto\ncarfanchi51\nHugoYasky\nCheMendele\nluispagella\ndianamaffia\nConstanzaBossio\nAdolfogusResist\nlulahlois\nmonicamabelnoug\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=206",
              "$$hashKey": "object:48406"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=207",
              "$$hashKey": "object:48407"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=208",
              "$$hashKey": "object:48408"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=209",
              "$$hashKey": "object:48409"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=210",
              "$$hashKey": "object:48410"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=211",
              "$$hashKey": "object:48411"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=212",
              "$$hashKey": "object:48412"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636061431873_2084113647",
      "id": "paragraph_1636061431873_2084113647",
      "dateCreated": "2021-11-04T21:30:31+0000",
      "dateStarted": "2021-11-05T01:18:35+0000",
      "dateFinished": "2021-11-05T01:18:45+0000",
      "status": "FINISHED",
      "$$hashKey": "object:33351"
    },
    {
      "text": "%pyspark\n\n# Grafo de los triángulos dirigidos con distintos vértices\n\ngrafo_dir_triang_distVert = GraphFrame(vertices_df, edges_df)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T01:21:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636068835947_557442507",
      "id": "paragraph_1636068835947_557442507",
      "dateCreated": "2021-11-04T23:33:55+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:42834",
      "dateFinished": "2021-11-05T01:21:43+0000",
      "dateStarted": "2021-11-05T01:21:42+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "text": "%pyspark\n\n# guardo un csv con los vertices para Gephi \ngrafo_dir_triang_distVert.vertices \\\n        .select(\"*\", col(\"id\").alias(\"Label\")) \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"/logs/dirTriangDistVert_vertices.csv\", mode=\"overwrite\", header=True)\n\n# guardo un csv con las aristas para Gephi\ngrafo_dir_triang_distVert.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"count_RT\",\"count_distinct_RT\") \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"/logs/dirTriangDistVert_edges.csv\", mode=\"overwrite\", header=True)\n\n# Se grafica en Gephi con el nombre: \"ejercicio_dirTriangDistVert\"",
      "user": "anonymous",
      "dateUpdated": "2021-11-05T01:26:29+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=213",
              "$$hashKey": "object:49353"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=214",
              "$$hashKey": "object:49354"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=215",
              "$$hashKey": "object:49355"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=216",
              "$$hashKey": "object:49356"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=217",
              "$$hashKey": "object:49357"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=218",
              "$$hashKey": "object:49358"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=219",
              "$$hashKey": "object:49359"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=220",
              "$$hashKey": "object:49360"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=221",
              "$$hashKey": "object:49361"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=222",
              "$$hashKey": "object:49362"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=223",
              "$$hashKey": "object:49363"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=224",
              "$$hashKey": "object:49364"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636075365869_804576606",
      "id": "paragraph_1636075365869_804576606",
      "dateCreated": "2021-11-05T01:22:45+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:48856",
      "dateFinished": "2021-11-05T01:26:45+0000",
      "dateStarted": "2021-11-05T01:26:29+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "title": "FIN",
      "text": "val baseDir=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\"\n\nz.put(\"baseDir\", baseDir)\nprint(\"\"\"%html\n<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-23T14:52:21+0000",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "baseDir: String = https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\n"
          },
          {
            "type": "HTML",
            "data": "<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635000741481_1698996846",
      "id": "20171010-191336_1667301043",
      "dateCreated": "2021-10-23T14:52:21+0000",
      "status": "READY",
      "$$hashKey": "object:33352"
    }
  ],
  "name": "Clase 07 - Grandes Grafos Sociales - Exequiel Santucho",
  "id": "2GM2J628G",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Clase 07 - Grandes Grafos Sociales - Exequiel Santucho"
}